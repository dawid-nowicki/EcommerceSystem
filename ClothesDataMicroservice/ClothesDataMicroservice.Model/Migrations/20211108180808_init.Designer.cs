// <auto-generated />
using System;
using ClothesDataMicroservice.Model.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ClothesDataMicroservice.Model.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20211108180808_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ClothUser", b =>
                {
                    b.Property<long>("ClothesId")
                        .HasColumnType("bigint");

                    b.Property<long>("OwnersId")
                        .HasColumnType("bigint");

                    b.HasKey("ClothesId", "OwnersId");

                    b.HasIndex("OwnersId");

                    b.ToTable("ClothUser");
                });

            modelBuilder.Entity("ClothesDataMicroservice.Model.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ClothesDataMicroservice.Model.Entities.Cloth", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<long?>("WeatherConditionsId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("WeatherConditionsId");

                    b.ToTable("Clothes");
                });

            modelBuilder.Entity("ClothesDataMicroservice.Model.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Hash")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClothesDataMicroservice.Model.Entities.WeatherConditions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("IsInadvisableForRain")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsInadvisableForSnow")
                        .HasColumnType("boolean");

                    b.Property<double>("MaxTemp")
                        .HasColumnType("double precision");

                    b.Property<double>("MinTemp")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Conditions");
                });

            modelBuilder.Entity("ClothUser", b =>
                {
                    b.HasOne("ClothesDataMicroservice.Model.Entities.Cloth", null)
                        .WithMany()
                        .HasForeignKey("ClothesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothesDataMicroservice.Model.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("OwnersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClothesDataMicroservice.Model.Entities.Cloth", b =>
                {
                    b.HasOne("ClothesDataMicroservice.Model.Entities.Category", "Category")
                        .WithMany("Clothes")
                        .HasForeignKey("CategoryId");

                    b.HasOne("ClothesDataMicroservice.Model.Entities.WeatherConditions", "WeatherConditions")
                        .WithMany()
                        .HasForeignKey("WeatherConditionsId");

                    b.Navigation("Category");

                    b.Navigation("WeatherConditions");
                });

            modelBuilder.Entity("ClothesDataMicroservice.Model.Entities.Category", b =>
                {
                    b.Navigation("Clothes");
                });
#pragma warning restore 612, 618
        }
    }
}
